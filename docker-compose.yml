services:
  app:
    build: .
    entrypoint: ["/app/docker/run-server.sh"]
    environment:
      DJANGO_SETTINGS_MODULE: "core.settings.production"
      POSTGRES_URL: "db"
      POSTGRES_PORT: "5432"
      POSTGRES_DB: "postgres"
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "postgres"
      REDIS_URL: "redis"
      REDIS_PORT: "6379"
      REDIS_DB: "1"
      CELERY_BROKER: "redis://redis:6379/2"
      CELERY_BACKEND: "redis://redis:6379/2"
    volumes:
      - static_volume:/app/static_files
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
  celery:
    build: .
    entrypoint: ["/app/docker/run-celery.sh"]
    environment:
      DJANGO_SETTINGS_MODULE: "core.settings.production"
      POSTGRES_URL: "db"
      POSTGRES_PORT: "5432"
      POSTGRES_DB: "postgres"
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "postgres"
      REDIS_URL: "redis"
      REDIS_PORT: "6379"
      REDIS_DB: "1"
      CELERY_BROKER: "redis://redis:6379/2"
      CELERY_BACKEND: "redis://redis:6379/2"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
  nginx:
    image: nginx:latest
    volumes:
      - static_volume:/static
      - ./nginx-default.conf:/etc/nginx/conf.d/default.conf
    ports:
      - "8000:80"
    depends_on:
      - app
  db:
    image: postgres:latest
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - pgdata:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 5s
      timeout: 5s
      retries: 5
  redis:
    image: redis:latest
    ports:
      - "6379:6379"
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 5s
      timeout: 5s
      retries: 5
volumes:
  pgdata:
  static_volume:
